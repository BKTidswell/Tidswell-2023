---
title: "Paper Figures and Text"
format: html
editor: visual
---

## Loading in the Libraries for Everything

```{r}
library(tidyverse)
library(ggplot2)
library(bbmle) #For ICtab
library(car)
library(ggpubr)
library(ggdist)
library(emmeans)
library(lme4)

```

## Functions and Variables

```{r}
rad2deg <- function(rad) {(rad * 180) / (pi)}
deg2rad <- function(deg) {(deg * pi) / (180)}
round_any <- function(x, accuracy, f=round){f(x/ accuracy) * accuracy}
ang_mean <- function(x){rad2deg(atan2(mean(sin(deg2rad(x))),mean(cos(deg2rad(x)))))}

fold_angle_0_360_to_0_180 <- function(x){abs(abs(x-180)-180)}

fold_angle_neg_180_180_to_neg_90_90 <- function(x){ifelse(x > 90,90-abs(90-x),ifelse(x < -90, -90+abs(-90-x), x))}

min_n <- function(x,n){sort(x)[1:n]}
max_n <- function(x,n){sort(x,decreasing = TRUE)[1:n]}

light_no_ab_color = "#d4d7dd"
light_ab_color = "#f5ba9e"
dark_no_ab_color = "#5e94d4"
sim_color = "#777777"

flow_split_still = "#F59DE2"
flow_split_flow = "#5DD492"

dark_split_light = "#5e94d4"
dark_split_dark = "#011627"

tailbeat_len = 19

allowed_flow_type = c("Still Water","Flowing Water (2 BL/s)")

dot_binwidth = 0.03

text_size = 16
```

## Fish Turning Graphs

```{r}
eight_fish_turning_data <- read.csv("Data/eight_fish_turning.csv") %>%
                           mutate(Flow = ifelse(Flow == "0", "Still Water", "Flowing Water (2 BL/s)")) %>%
                           mutate(Ablation = ifelse(Ablation  == "N", "No Ablation", "Ablated")) %>%
                           mutate(Darkness = ifelse(Darkness == "N", "Light", "Dark")) %>%
                           mutate(Flow = factor(Flow), Ablation = factor(Ablation), Darkness = factor(Darkness)) %>%
                           mutate(Flow = fct_relevel(Flow, c("Still Water","Flowing Water (2 BL/s)"))) %>%
                           mutate(Ablation = fct_relevel(Ablation, c("No Ablation","Ablated"))) %>%
                           mutate(Darkness = fct_relevel(Darkness, c("Light","Dark"))) %>%
                           mutate(Flow_Ablation_Darkness = factor(paste(Flow,Ablation,Darkness,sep=", "))) %>%
                           mutate(Fish_Num_Ratio = Fish_Right/8) %>%
                           mutate(Fish_Ratio = paste(Fish_Left,Fish_Right,sep=":")) %>%
                           filter(Fish_Ratio %in% c("7:0","6:1","5:2","4:3","3:4","2:5","1:6","0:7")) %>%
                           mutate(Fish_Ratio = fct_relevel(Fish_Ratio,
                                                           c("7:0","6:1","5:2","4:3",
                                                             "3:4","2:5","1:6","0:7"))) %>%
                           mutate(turn_bool = ifelse(Turn_Dir == 0,1,0)) %>% 
                           select(-c("Singles")) %>%
                           mutate(Type = "Eight Fish")

single_fish_turning_data <- read.csv("Data/single_fish_turning.csv") %>%
                           mutate(Flow = ifelse(Flow == "0", "Still Water", "Flowing Water (2 BL/s)")) %>%
                           mutate(Ablation = ifelse(Ablation  == "N", "No Ablation", "Ablated")) %>%
                           mutate(Darkness = ifelse(Darkness == "N", "Light", "Dark")) %>%
                           mutate(Flow = factor(Flow), Ablation = factor(Ablation), Darkness = factor(Darkness)) %>%
                           mutate(Flow = fct_relevel(Flow, c("Still Water","Flowing Water (2 BL/s)"))) %>%
                           mutate(Ablation = fct_relevel(Ablation, c("No Ablation","Ablated"))) %>%
                           mutate(Darkness = fct_relevel(Darkness, c("Light","Dark"))) %>%
                           mutate(Flow_Ablation_Darkness = factor(paste(Flow,Ablation,Darkness,sep=", "))) %>%
                           mutate(Fish_Num_Ratio = Fish_Right/8) %>%
                           mutate(Fish_Ratio = paste(Fish_Left,Fish_Right,sep=":")) %>%
                           filter(Fish_Ratio %in% c("7:0","6:1","5:2","4:3","3:4","2:5","1:6","0:7")) %>%
                           mutate(Fish_Ratio = fct_relevel(Fish_Ratio,
                                                           c("7:0","6:1","5:2","4:3",
                                                             "3:4","2:5","1:6","0:7"))) %>%
                           mutate(turn_bool = ifelse(Turn_Dir == 0,1,0)) %>% 
                           select(-c("Singles")) %>%
                           mutate(Type = "Combined Single")

all_turning_data <- rbind(eight_fish_turning_data,single_fish_turning_data)

turning_data_sum <- all_turning_data %>% na.omit %>%
                                     group_by(Fish_Ratio,Fish_Num_Ratio,Flow,Ablation,Darkness,Flow_Ablation_Darkness,Type) %>%
                                     summarize(mean_right_turn = mean(turn_bool),
                                               sd_right_turn = sd(turn_bool),
                                               se_right_turn = sd_right_turn/sqrt(n()),
                                               n = n()) %>%
                                     ungroup()

```

### All the Plots of Eight Fish in Flow and Still, Raw and GLM

```{r}
eight_fish_still <- ggplot(turning_data_sum %>% filter(Type == "Eight Fish") %>% filter(Flow == "Still Water"),
       aes(x = Fish_Num_Ratio, y = mean_right_turn, color = interaction(Ablation, Darkness, sep =", ")))+
  geom_point()+
  #geom_line(alpha = 0.25) +
  geom_smooth(se = F, method = glm, formula = y ~ x, method.args = list(family = "binomial"))+
  #facet_wrap(~ Darkness + Ablation) +
  theme_classic() +
  xlab("# Fish on Left : # Fish on Right") +
  ylab("Probability of a Right Turn") +
  ylim(0,1) +
  scale_colour_manual(values = c(light_no_ab_color,light_ab_color,dark_no_ab_color)) +
  #ggtitle("Observed Probability of a Right Turn Based on Ratio of Fish to the Left and Right") +
  scale_x_continuous(breaks = c(0,0.125,0.25,0.375,
                                0.5,0.625,0.75,0.875),
                     labels = c("7:0","6:1","5:2","4:3",
                                "3:4","2:5","1:6","0:7"))+ 
  labs(color = "Sensory Conditions")+
  theme(axis.text.x = element_text(size = text_size),
        axis.text.y = element_text(size = text_size),
        axis.title.y = element_text(size = text_size))

eight_fish_flow <- ggplot(turning_data_sum %>% filter(Type == "Eight Fish") %>% filter(Flow == "Flowing Water (2 BL/s)"),
       aes(x = Fish_Num_Ratio, y = mean_right_turn, color = interaction(Ablation, Darkness, sep =", ")))+
  geom_point()+
  #geom_line(alpha = 0.25) +
  geom_smooth(se = F, method = glm, formula = y ~ x, method.args = list(family = "binomial"))+
  #facet_wrap(~ Darkness + Ablation) +
  theme_classic() +
  xlab("# Fish on Left : # Fish on Right") +
  ylab("Probability of a Right Turn") +
  ylim(0,1) +
  scale_colour_manual(values = c(light_no_ab_color,light_ab_color,dark_no_ab_color)) +
  #ggtitle("Observed Probability of a Right Turn Based on Ratio of Fish to the Left and Right") +
  scale_x_continuous(breaks = c(0,0.125,0.25,0.375,
                                0.5,0.625,0.75,0.875),
                     labels = c("7:0","6:1","5:2","4:3",
                                "3:4","2:5","1:6","0:7"))+ 
  labs(color = "Sensory Conditions")+
  theme(axis.text.x = element_text(size = text_size),
        axis.text.y = element_text(size = text_size),
        axis.title.y = element_text(size = text_size))

eight_fish_still
eight_fish_flow

```

### All the Plots of Eight Fish vs Single in Still Water

```{r}

dark_eight_and_single_graph <- ggplot(turning_data_sum %>% filter(Flow == "Still Water" & Darkness == "Dark"),
       aes(x = Fish_Num_Ratio, y = mean_right_turn, color = Type))+
  geom_point()+
  geom_smooth(se = F, method = glm, formula = y ~ x, method.args = list(family = "binomial"))+
  theme_classic() +
  xlab("# Fish on Left : # Fish on Right") +
  ylab("Probability of a Right Turn") +
  ylim(0,1) +
  scale_colour_manual(values = c(sim_color,dark_no_ab_color), labels=function(x){sub("\\s", "\n", x)}) +
  #ggtitle("Observed Probability of a Right Turn Based on Ratio of Fish to the Left and Right") +
  scale_x_continuous(breaks = c(0,0.125,0.25,0.375,
                                0.5,0.625,0.75,0.875),
                     labels = c("7:0","6:1","5:2","4:3",
                                "3:4","2:5","1:6","0:7"))+ 
  labs(color = "Sensory\nConditions")+
  theme(axis.text.x = element_text(size = text_size/2),
        axis.text.y = element_text(size = text_size/2),
        axis.title.y = element_text(size = text_size/2),
        legend.position = "none")


ablation_eight_and_single_graph <- ggplot(turning_data_sum %>% filter(Flow == "Still Water" & Ablation == "Ablated"),
       aes(x = Fish_Num_Ratio, y = mean_right_turn, color = Type))+
  geom_point()+
  geom_smooth(se = F, method = glm, formula = y ~ x, method.args = list(family = "binomial"))+
  theme_classic() +
  xlab("# Fish on Left : # Fish on Right") +
  ylab("Probability of a Right Turn") +
  ylim(0,1) +
  scale_colour_manual(values = c(sim_color,light_ab_color), labels=function(x){sub("\\s", "\n", x)}) +
  #ggtitle("Observed Probability of a Right Turn Based on Ratio of Fish to the Left and Right") +
  scale_x_continuous(breaks = c(0,0.125,0.25,0.375,
                                0.5,0.625,0.75,0.875),
                     labels = c("7:0","6:1","5:2","4:3",
                                "3:4","2:5","1:6","0:7"))+ 
  labs(color = "Sensory\nConditions")+
  theme(axis.text.x = element_text(size = text_size/2),
        axis.text.y = element_text(size = text_size/2),
        axis.title.y = element_text(size = text_size/2),
        legend.position = "none")


light_eight_and_single_graph <- ggplot(turning_data_sum %>% filter(Flow == "Still Water" & Ablation == "No Ablation" & Darkness == "Light"),
       aes(x = Fish_Num_Ratio, y = mean_right_turn, color = Type))+
  geom_point()+
  geom_smooth(se = F, method = glm, formula = y ~ x, method.args = list(family = "binomial"))+
  theme_classic() +
  xlab("# Fish on Left : # Fish on Right") +
  ylab("Probability of a Right Turn") +
  ylim(0,1) +
  scale_colour_manual(values = c(sim_color,light_no_ab_color), labels=function(x){sub("\\s", "\n", x)}) +
  #ggtitle("Observed Probability of a Right Turn Based on Ratio of Fish to the Left and Right") +
  scale_x_continuous(breaks = c(0,0.125,0.25,0.375,
                                0.5,0.625,0.75,0.875),
                     labels = c("7:0","6:1","5:2","4:3",
                                "3:4","2:5","1:6","0:7"))+ 
  labs(color = "Sensory\nConditions")+
  theme(axis.text.x = element_text(size = text_size/2),
        axis.text.y = element_text(size = text_size/2),
        axis.title.y = element_text(size = text_size/2),
        legend.position = "none")

light_eight_and_single_graph
ablation_eight_and_single_graph
dark_eight_and_single_graph
```

### Turning Stats Table Here

```{r}
turning_glm_still <- glm(turn_bool ~ Fish_Num_Ratio*(Ablation+Darkness),
                         data = eight_fish_turning_data %>% filter(Flow == "Still Water"), family = binomial)
tgs_aov <- Anova(turning_glm_still)

turning_glm_flow <- glm(turn_bool ~ Fish_Num_Ratio*(Ablation+Darkness),
                         data = eight_fish_turning_data %>% filter(Flow == "Flowing Water (2 BL/s)"), family = binomial)
tgf_aov <- Anova(turning_glm_flow)

turning_results <- tibble(Flow_or_Still = c("Still","Still","Still","Still","Still","Flow","Flow","Flow","Flow","Flow"),
       Factor = c("Fish_Num_Ratio","Ablation","Darkness","Fish_Num_Ratio:Ablation","Fish_Num_Ratio:Darkness",
                  "Fish_Num_Ratio","Ablation","Darkness","Fish_Num_Ratio:Ablation","Fish_Num_Ratio:Darkness"),
       DF = c(rep(length(turning_glm_still$y)-3,5),rep(length(turning_glm_flow$y)-3,5)),
       LR_Chisq = c(tgs_aov$`LR Chisq`,tgf_aov$`LR Chisq`),
       P_Val = c(tgs_aov$`Pr(>Chisq)`,tgf_aov$`Pr(>Chisq)`),
       Is_Sig = P_Val < 0.05)


# Single vs Eight fish
light_turning_glm <- glm(turn_bool ~ Fish_Num_Ratio*Type,
                               data = all_turning_data  %>% filter(Flow == "Still Water" & Ablation == "No Ablation" & Darkness == "Light"),
                               family = binomial)
ltg_aov <- Anova(light_turning_glm)

ablated_turning_glm <- glm(turn_bool ~ Fish_Num_Ratio*Type,
                               data = all_turning_data  %>% filter(Flow == "Still Water" & Ablation == "Ablated"),
                               family = binomial)
altg_aov <- Anova(ablated_turning_glm)


dark_turning_glm <- glm(turn_bool ~ Fish_Num_Ratio*Type,
                               data = all_turning_data  %>% filter(Flow == "Still Water" & Darkness == "Dark"),
                               family = binomial)
dtg_aov <- Anova(dark_turning_glm)

single_vs_eight_results <- tibble(Condition = c("Light","Light","Ablated","Ablated","Darkness","Darkness"),
       Factor = c("Type","FNR:Type","Type","FNR:Type","Type","FNR:Type"),
       DF = c(rep(length(light_turning_glm$y)-3,2),rep(length(ablated_turning_glm$y)-3,2),rep(length(dark_turning_glm$y)-3,2)),
       LR_Chisq = c(ltg_aov$`LR Chisq`[2:3],altg_aov$`LR Chisq`[2:3],dtg_aov$`LR Chisq`[2:3]),
       P_Val = c(ltg_aov$`Pr(>Chisq)`[2:3],altg_aov$`Pr(>Chisq)`[2:3],dtg_aov$`Pr(>Chisq)`[2:3]),
       Is_Sig = P_Val < 0.05)

turning_results
single_vs_eight_results

```



### Now we combine it all

```{r}
# turning_mega_plot <- ggarrange(eight_fish_still, eight_fish_flow,ggplot() + theme_classic() + theme(axis.line=element_blank()),
#           light_eight_and_single_graph, ablation_eight_and_single_graph, dark_eight_and_single_graph,
#           labels = c("A", "B", "", "C", "D", "E"),
#           ncol = 3, nrow = 2)
# 
# ggsave("Paper Figures/turning_mega_plot.png", turning_mega_plot, width = 20, height = 12)

turning_both_plot <- ggarrange(eight_fish_still, eight_fish_flow,
          labels = c("A", "B"),
          ncol = 2, nrow = 1)

ggsave("Paper Figures/turning_both_plot.png", turning_both_plot, width = 12, height = 6)


turning_single_test_plot <- ggarrange(
          light_eight_and_single_graph, ablation_eight_and_single_graph, dark_eight_and_single_graph,
          labels = c("A", "B", "C"),
          ncol = 3, nrow = 1)

ggsave("Paper Figures/turning_single_test_plot.png", turning_single_test_plot, width = 9, height = 3)


```

## School Summary Stats

```{r}
school_data <- read.csv("Data/Fish_School_Values_3D.csv")
school_data <- na.omit(school_data)

school_data <- school_data %>% mutate(Flow = ifelse(Flow == "0", "Still Water", "Flowing Water (2 BL/s)")) %>%
                           mutate(Ablation = ifelse(Ablation == "N", "No Ablation", "Ablated")) %>%
                           mutate(Darkness = ifelse(Darkness == "N", "Light", "Dark")) %>%
                           filter(School_Speed <= 5) %>%
                           mutate(Flow = factor(Flow), Ablation = factor(Ablation), Darkness = factor(Darkness)) %>%
                           mutate(Flow = fct_relevel(Flow, c("Still Water","Flowing Water (2 BL/s)"))) %>%
                           mutate(Ablation = fct_relevel(Ablation, c("No Ablation","Ablated"))) %>%
                           mutate(Darkness = fct_relevel(Darkness, c("Light","Dark"))) %>%
                           mutate(Flow_Ablation_Darkness = factor(paste(Flow,Ablation,Darkness,sep="/n"))) %>%
                            
                           # ### Used to remove every third point to reduce autocorrelation
                           mutate(Date = paste(Year,Month,Day,sep="_"),
                                  Date_Trial = paste(Year,Month,Day,Trial,sep="_")) %>%
                           group_by(Date_Trial) %>%
                           filter(row_number() %% 3 == 1) %>%
                           ungroup() %>%
                           # ###
                          
                           group_by(Flow_Ablation_Darkness) %>%
                           mutate(NND_Mean_Val = mean(NND), NND_SD_Val = sd(NND),
                                  Polar_Mean_Val = mean(School_Polar), Polar_SD_Val = sd(School_Polar),
                                  Speed_Mean_Val = mean(School_Speed), Speed_SD_Val = sd(School_Speed),
                                  Area_Mean_Val = mean(Area), Area_SD_Val = sd(Area),
                                  Groups_Mean_Val = mean(Groups), Groups_SD_Val = sd(Groups),
                                  Mean_Groups_Mean_Val = mean(Mean_Groups), Mean_Groups_SD_Val = sd(Mean_Groups),
                                  Height_Mean_Val = mean(School_Height), Height_SD_Val = sd(School_Height)) %>%
                           ungroup()
```

### NND Plot

```{r}
my_comparisons <- list( c("No Ablation, Light", "No Ablation, Dark"))

nnd_still <- ggplot(school_data %>% filter(Flow == "Still Water"),
       aes(x = interaction(Ablation,Darkness,sep=", "), y = NND,
           color = interaction(Ablation,Darkness,sep=", "),
           fill = interaction(Ablation,Darkness,sep=", ")))+
  stat_dots(side = "both", binwidth = unit(dot_binwidth, "npc")) +
  geom_point(aes(y = NND_Mean_Val), size = 5, color = "Black") +
  geom_errorbar(aes(ymin=NND_Mean_Val-NND_SD_Val, ymax=NND_Mean_Val+NND_SD_Val), width=.2, color = "Black")+
  guides(fill = guide_legend(title = "Condition")) +
  scale_fill_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color)) +
  scale_color_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color)) +
  #ggtitle("Effect of Available Senses on Nearest Neighbor Distance (NND) in Still Water") +
  xlab("") +
  ylab("School NND (BL)") +
  theme_light()+ 
  theme(legend.position = "none") +
  ylim(0,2)+
  stat_compare_means(comparisons = my_comparisons, label.y = c(1.75), label = "p.signif", hide.ns = TRUE) +
  theme(axis.text.x = element_text(size = text_size),
        axis.text.y = element_text(size = text_size),
        axis.title.y = element_text(size = text_size))+
  scale_x_discrete(labels=function(x){sub(",\\s", "\n", x)})

my_comparisons <- list()

nnd_flow <- ggplot(school_data %>% filter(Flow == "Flowing Water (2 BL/s)"),
       aes(x = interaction(Ablation,Darkness,sep=", "), y = NND,
           color = interaction(Ablation,Darkness,sep=", "),
           fill = interaction(Ablation,Darkness,sep=", ")))+
  stat_dots(side = "both", binwidth = unit(dot_binwidth, "npc")) +
  geom_point(aes(y = NND_Mean_Val), size = 5, color = "Black") +
  geom_errorbar(aes(ymin=NND_Mean_Val-NND_SD_Val, ymax=NND_Mean_Val+NND_SD_Val), width=.2, color = "Black")+
  guides(fill = guide_legend(title = "Condition")) +
  scale_fill_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color)) +
  scale_color_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color)) +
  #ggtitle("Effect of Available Senses on Nearest Neighbor Distance (NND) in Flow (2 BL/s)") +
  xlab("") +
  ylab("School NND (BL)") +
  theme_light()+ 
  theme(legend.position = "none") +
  ylim(0,2)+
  stat_compare_means(comparisons = my_comparisons, label = "p.signif", hide.ns = TRUE) +
  theme(axis.text.x = element_text(size = text_size),
        axis.text.y = element_text(size = text_size),
        axis.title.y = element_text(size = text_size))+
  scale_x_discrete(labels=function(x){sub(",\\s", "\n", x)})


nnd_still
nnd_flow


nnd_glm <- glm(NND ~ Ablation*Darkness*Flow, data = school_data)
Anova(nnd_glm)
emmeans(nnd_glm, specs = pairwise ~ Ablation:Darkness | Flow)

```

### Height Plot

```{r}
my_comparisons <- list()

height_still <- ggplot(school_data %>% filter(Flow == "Still Water"),
       aes(x = interaction(Ablation,Darkness,sep=", "), y = School_Height,
           color = interaction(Ablation,Darkness,sep=", "),
           fill = interaction(Ablation,Darkness,sep=", ")))+
  stat_dots(side = "both", binwidth = unit(dot_binwidth, "npc")) +
  geom_point(aes(y = Height_Mean_Val), size = 5, color = "Black") +
  geom_errorbar(aes(ymin=Height_Mean_Val-Height_SD_Val, ymax=Height_Mean_Val+Height_SD_Val), width=.2, color = "Black")+
  guides(fill = guide_legend(title = "Condition")) +
  scale_fill_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color)) +
  scale_color_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color)) +
  #ggtitle("Effect of Available Senses on Nearest Neighbor Distance (NND) in Still Water") +
  xlab("") +
  ylab("NND (BL)") +
  theme_light()+ 
  theme(legend.position = "none") +
  #ylim(0,3)+
  stat_compare_means(comparisons = my_comparisons, label = "p.signif", hide.ns = TRUE) +
  theme(axis.text.x = element_text(size = text_size),
        axis.text.y = element_text(size = text_size),
        axis.title.y = element_text(size = text_size))+
  scale_x_discrete(labels=function(x){sub(",\\s", "\n", x)})

my_comparisons <- list()

height_flow <- ggplot(school_data %>% filter(Flow == "Flowing Water (2 BL/s)"),
       aes(x = interaction(Ablation,Darkness,sep=", "), y = School_Height,
           color = interaction(Ablation,Darkness,sep=", "),
           fill = interaction(Ablation,Darkness,sep=", ")))+
  stat_dots(side = "both", binwidth = unit(dot_binwidth, "npc")) +
  geom_point(aes(y = Height_Mean_Val), size = 5, color = "Black") +
  geom_errorbar(aes(ymin=Height_Mean_Val-Height_SD_Val, ymax=Height_Mean_Val+Height_SD_Val), width=.2, color = "Black")+
  guides(fill = guide_legend(title = "Condition")) +
  scale_fill_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color)) +
  scale_color_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color)) +
  #ggtitle("Effect of Available Senses on Nearest Neighbor Distance (NND) in Flow (2 BL/s)") +
  xlab("") +
  ylab("NND (BL)") +
  theme_light()+ 
  theme(legend.position = "none") +
  #ylim(0,3)+
  stat_compare_means(comparisons = my_comparisons, label = "p.signif", hide.ns = TRUE) +
  theme(axis.text.x = element_text(size = text_size),
        axis.text.y = element_text(size = text_size),
        axis.title.y = element_text(size = text_size))+
  scale_x_discrete(labels=function(x){sub(",\\s", "\n", x)})


height_still
height_flow

height_glm <- glm(School_Height ~ Ablation*Darkness*Flow, data = school_data)
Anova(height_glm)
emmeans(height_glm, specs = pairwise ~ Ablation:Darkness | Flow)
```

### Polarization

```{r}

my_comparisons <- list()

polar_still <- ggplot(school_data %>% filter(Flow == "Still Water"),
       aes(x = interaction(Ablation,Darkness,sep=", "), y = School_Polar,
           color = interaction(Ablation,Darkness,sep=", "),
           fill = interaction(Ablation,Darkness,sep=", ")))+
  stat_dots(side = "both", binwidth = unit(dot_binwidth, "npc")) +
  geom_point(aes(y = Polar_Mean_Val), size = 5, color = "Black") +
  geom_errorbar(aes(ymin=Polar_Mean_Val-Polar_SD_Val, ymax=Polar_Mean_Val+Polar_SD_Val), width=.2, color = "Black")+
  guides(fill = guide_legend(title = "Condition")) +
  scale_fill_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color)) +
  scale_color_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color)) +
  #ggtitle("Effect of Available Senses on Polarization in Still Water") +
  xlab("") +
  ylab("Polarization") +
  theme_light()+ 
  theme(legend.position = "none") +
  ylim(0,1.15)+
  stat_compare_means(comparisons = my_comparisons, label = "p.signif", hide.ns = TRUE) +
  theme(axis.text.x = element_text(size = text_size),
        axis.text.y = element_text(size = text_size),
        axis.title.y = element_text(size = text_size))+
  scale_x_discrete(labels=function(x){sub(",\\s", "\n", x)})

my_comparisons <- list()

polar_flow <- ggplot(school_data %>% filter(Flow == "Flowing Water (2 BL/s)"),
       aes(x = interaction(Ablation,Darkness,sep=", "), y = School_Polar,
           color = interaction(Ablation,Darkness,sep=", "),
           fill = interaction(Ablation,Darkness,sep=", ")))+
  stat_dots(side = "both", binwidth = unit(dot_binwidth, "npc")) +
  geom_point(aes(y = Polar_Mean_Val), size = 5, color = "Black") +
  geom_errorbar(aes(ymin=Polar_Mean_Val-Polar_SD_Val, ymax=Polar_Mean_Val+Polar_SD_Val), width=.2, color = "Black")+
  guides(fill = guide_legend(title = "Condition")) +
  scale_fill_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color)) +
  scale_color_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color)) +
  #ggtitle("Effect of Available Senses on Polarization in Flowing Water (2 BL/s)") +
  xlab("") +
  ylab("Polarization") +
  theme_light()+ 
  theme(legend.position = "none") +
  ylim(0,1.15)+
  stat_compare_means(comparisons = my_comparisons, label = "p.signif", hide.ns = TRUE) +
  theme(axis.text.x = element_text(size = text_size),
        axis.text.y = element_text(size = text_size),
        axis.title.y = element_text(size = text_size))+
  scale_x_discrete(labels=function(x){sub(",\\s", "\n", x)})

polar_still
polar_flow

polar_glm <- glm(School_Polar ~ Ablation*Darkness*Flow, data = school_data)
Anova(polar_glm)
emmeans(polar_glm, specs = pairwise ~ Ablation:Darkness | Flow)

polar_glm_still <- glm(School_Polar ~ Ablation*Darkness, data = school_data %>% filter(Flow == "Still Water"))
Anova(polar_glm_still, test.statistic="F")

polar_glm_flow <- glm(School_Polar ~ Ablation*Darkness, data = school_data %>% filter(Flow == "Flowing Water (2 BL/s)"))
Anova(polar_glm_flow, test.statistic="F")
```

### Speed

```{r}
my_comparisons <- list()

speed_still <- ggplot(school_data %>% filter(Flow == "Still Water"),
       aes(x = interaction(Ablation,Darkness,sep=", "), y = School_Speed,
           color = interaction(Ablation,Darkness,sep=", "),
           fill = interaction(Ablation,Darkness,sep=", ")))+
  stat_dots(side = "both", binwidth = unit(dot_binwidth, "npc")) +
  geom_point(aes(y = Speed_Mean_Val), size = 5, color = "Black") +
  geom_errorbar(aes(ymin=Speed_Mean_Val-Speed_SD_Val, ymax=Speed_Mean_Val+Speed_SD_Val), width=.2, color = "Black")+
  guides(fill = guide_legend(title = "Condition")) +
  scale_fill_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color)) +
  scale_color_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color)) +
  #ggtitle("Effect of Available Senses on Speed (BL/s) in Still Water") +
  xlab("") +
  ylab("Speed (BL/s)") +
  theme_light()+ 
  theme(legend.position = "none") +
  ylim(0,6)+
  stat_compare_means(comparisons = my_comparisons, label = "p.signif", hide.ns = TRUE) +
  theme(axis.text.x = element_text(size = text_size),
        axis.text.y = element_text(size = text_size),
        axis.title.y = element_text(size = text_size))+
  scale_x_discrete(labels=function(x){sub(",\\s", "\n", x)})

my_comparisons <- list(c("No Ablation, Light", "Ablated, Light"))

speed_flow <- ggplot(school_data %>% filter(Flow == "Flowing Water (2 BL/s)"),
       aes(x = interaction(Ablation,Darkness,sep=", "), y = School_Speed,
           color = interaction(Ablation,Darkness,sep=", "),
           fill = interaction(Ablation,Darkness,sep=", ")))+
  stat_dots(side = "both", binwidth = unit(dot_binwidth, "npc")) +
  geom_point(aes(y = Speed_Mean_Val), size = 5, color = "Black") +
  geom_errorbar(aes(ymin=Speed_Mean_Val-Speed_SD_Val, ymax=Speed_Mean_Val+Speed_SD_Val), width=.2, color = "Black")+
  guides(fill = guide_legend(title = "Condition")) +
  scale_fill_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color)) +
  scale_color_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color)) +
  #ggtitle("Effect of Available Senses on Speed (BL/s) in Flowing Water (2 BL/s)") +
  xlab("") +
  ylab("Speed (BL/s)") +
  theme_light()+ 
  theme(legend.position = "none") +
  ylim(0,6)+
  stat_compare_means(comparisons = my_comparisons, label.y = c(5.5), label = "p.signif", hide.ns = TRUE) +
  theme(axis.text.x = element_text(size = text_size),
        axis.text.y = element_text(size = text_size),
        axis.title.y = element_text(size = text_size))+
  scale_x_discrete(labels=function(x){sub(",\\s", "\n", x)})

speed_still
speed_flow

speed_glm <- glm(School_Speed ~ Ablation*Darkness*Flow, data = school_data)
Anova(speed_glm)
emmeans(speed_glm, specs = pairwise ~ Ablation:Darkness | Flow)

speed_glm_still <- glm(School_Speed ~ Ablation*Darkness, data = school_data %>% filter(Flow == "Still Water"))
Anova(speed_glm_still, test.statistic="F")

speed_glm_flow <- glm(School_Speed ~ Ablation*Darkness, data = school_data %>% filter(Flow == "Flowing Water (2 BL/s)"))
Anova(speed_glm_flow, test.statistic="F")
```

### Area

```{r}
my_comparisons <- list( c("No Ablation, Light", "No Ablation, Dark"))

area_still <- ggplot(school_data %>% filter(Flow == "Still Water"),
       aes(x = interaction(Ablation,Darkness,sep=", "), y = Area,
           color = interaction(Ablation,Darkness,sep=", "),
           fill = interaction(Ablation,Darkness,sep=", ")))+
  stat_dots(side = "both", binwidth = unit(dot_binwidth, "npc")) +
  geom_point(aes(y = Area_Mean_Val), size = 5, color = "Black") +
  geom_errorbar(aes(ymin=Area_Mean_Val-Area_SD_Val, ymax=Area_Mean_Val+Area_SD_Val), width=.2, color = "Black")+
  guides(fill = guide_legend(title = "Condition")) +
  scale_fill_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color)) +
  scale_color_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color)) +
  #ggtitle("Effect of Available Senses on Speed (BL/s) in Still Water") +
  xlab("") +
  ylab("Area (BL^2)") +
  theme_light()+ 
  theme(legend.position = "none") +
  #ylim(0,8.5)+
  stat_compare_means(comparisons = my_comparisons, label = "p.signif", hide.ns = TRUE) +
  theme(axis.text.x = element_text(size = text_size),
        axis.text.y = element_text(size = text_size),
        axis.title.y = element_text(size = text_size))+
  scale_x_discrete(labels=function(x){sub(",\\s", "\n", x)})

my_comparisons <- list()

area_flow <- ggplot(school_data %>% filter(Flow == "Flowing Water (2 BL/s)"),
       aes(x = interaction(Ablation,Darkness,sep=", "), y = Area,
           color = interaction(Ablation,Darkness,sep=", "),
           fill = interaction(Ablation,Darkness,sep=", ")))+
  stat_dots(side = "both", binwidth = unit(dot_binwidth, "npc")) +
  geom_point(aes(y = Area_Mean_Val), size = 5, color = "Black") +
  geom_errorbar(aes(ymin=Area_Mean_Val-Area_SD_Val, ymax=Area_Mean_Val+Area_SD_Val), width=.2, color = "Black")+
  guides(fill = guide_legend(title = "Condition")) +
  scale_fill_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color)) +
  scale_color_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color)) +
  #ggtitle("Effect of Available Senses on Speed (BL/s) in Still Water") +
  xlab("") +
  ylab("Area (BL^2)") +
  theme_light()+ 
  theme(legend.position = "none") +
  #ylim(0,8.5)+
  stat_compare_means(comparisons = my_comparisons, label = "p.signif", hide.ns = TRUE) +
  theme(axis.text.x = element_text(size = text_size),
        axis.text.y = element_text(size = text_size),
        axis.title.y = element_text(size = text_size))+
  scale_x_discrete(labels=function(x){sub(",\\s", "\n", x)})

area_still
area_flow

area_glm <- glm(Area ~ Ablation*Darkness*Flow, data = school_data)
Anova(area_glm)
emmeans(area_glm, specs = pairwise ~ Ablation:Darkness | Flow)
```

### Number of Groups

```{r}
group_sum_data <- school_data %>% group_by(Flow, Ablation, Darkness, Groups) %>%
                            summarise(count = n()) %>%
                            ungroup() %>%
                            mutate(Groups = as.factor(Groups),
                                   Groups = fct_rev(Groups))

group_still <- ggplot(group_sum_data %>% filter(Flow == "Still Water"),
       aes(x = interaction(Ablation,Darkness,sep=", "),
           y = count,
           fill = Groups)) + 
    geom_bar(position="fill", stat="identity")+
    xlab("") +
    ylab("Proportion of Time") +
    theme_light()+ 
    scale_fill_manual(values=c("8" = "#1D3557","7" = "#325A7C","6" = "#457B9D","5" = "#7BAFBF",
                               "4" = "#A8DADC","3" = "#D0EBE6","2" = "#F1FAEE","1" = "#e63946")) +
    theme(axis.text.x = element_text(size = text_size),
          axis.text.y = element_text(size = text_size),
          axis.title.y = element_text(size = text_size))+
  scale_x_discrete(labels=function(x){sub(",\\s", "\n", x)})

group_flow <- ggplot(group_sum_data %>% filter(Flow == "Flowing Water (2 BL/s)"),
       aes(x = interaction(Ablation,Darkness,sep=", "),
           y = count,
           fill = Groups)) + 
    geom_bar(position="fill", stat="identity")+
    xlab("") +
    ylab("Proportion of Time") +
    theme_light()+ 
    scale_fill_manual(values=c("8" = "#1D3557","7" = "#325A7C","6" = "#457B9D","5" = "#7BAFBF",
                               "4" = "#A8DADC","3" = "#D0EBE6","2" = "#F1FAEE","1" = "#e63946")) +
    theme(axis.text.x = element_text(size = text_size),
          axis.text.y = element_text(size = text_size),
          axis.title.y = element_text(size = text_size))+
  scale_x_discrete(labels=function(x){sub(",\\s", "\n", x)})


group_still
group_flow

groups_glm <- glm(Groups ~ Ablation*Darkness*Flow, data = school_data, family  = poisson)
Anova(area_glm)
emmeans(area_glm, specs = pairwise ~ Ablation:Darkness | Flow)

groups_glm_still <- glm(Groups ~ Ablation*Darkness, data = school_data %>% filter(Flow == "Still Water"), family  = poisson)
Anova(groups_glm_still, test.statistic="F")

groups_glm_flow <- glm(Groups ~ Ablation*Darkness, data = school_data %>% filter(Flow == "Flowing Water (2 BL/s)"), family  = poisson)
Anova(groups_glm_flow, test.statistic="F")

```

### Now we combine them

```{r}
school_stats_mega_plot <- ggarrange(nnd_still, nnd_flow, 
                                    polar_still, polar_flow,
                                    speed_still, speed_flow,
                                    group_still, group_flow,
          labels = c("A", "B", "C", "D", "E", "F", "G", "H"),
          ncol = 2, nrow = 4)  

ggsave("Paper Figures/school_stats_mega_plot.png", school_stats_mega_plot, width = 10, height = 17)
```



